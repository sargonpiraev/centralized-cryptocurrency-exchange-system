---
description: Здесь описывается сценарий для Выполнения код-ревью. 
globs: 
alwaysApply: false
---
# Code Review Workflow

This document describes the standardized process for conducting code reviews in our system.

## Usage
When requested to "Review this merge request", follow this workflow.

## Required Input
- GitLab Merge Request URL

## Workflow Steps

### 1. Initial Setup
1. Get merge request information from GitLab
   - Note: project_id should be in format "namespace/project-name" from the merge request URL
   - Extract Jira ticket number from the branch name

### 2. Jira Status Management
1. Verify the Jira ticket is in "To Code Review" status
2. Update the Jira ticket status to "Code Review In Progress"
3. Retrieve full Jira ticket details (using fields=*all)

### 3. Context Gathering
1. Check Jira ticket description for:
   - Confluence documentation links
     - If found, retrieve and analyze the documentation
   - Epic links
     - If found:
       - Retrieve Epic details
       - Check Epic description for Confluence links
       - If Confluence links found, retrieve and analyze the documentation
2. Analyze affected libraries and frameworks:
   - Review merge request changes to identify used libraries
   - Use Context 7 to fetch up-to-date documentation for each library
   - Pay special attention to:
     - API changes and deprecations
     - Best practices and recommended patterns
     - Version-specific features and limitations

### 4. Code Review
1. Get merge request diff from GitLab
2. Review changes against:
   - Task requirements
   - Code quality standards
   - Project conventions

### 5. Review Resolution
- If review passes:
  1. Add comment in Jira stating "Approved after review"
  2. Update Jira ticket status to "To Test"
  
- If issues found:
  1. Add detailed review comments in GitLab merge request
  2. Update Jira ticket status to "To Do"
  3. Include specific recommendations for improvements

## Notes
- All status transitions should be properly tracked
- Comments should be constructive and specific
- Review should focus on both functionality and code quality