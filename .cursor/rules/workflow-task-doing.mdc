---
description: Здесь описывается сценарий выполнения задачи из Jira.
globs: 
alwaysApply: false
---
# Task Implementation Workflow

This document describes the standardized process for implementing Jira tasks in our system.

## Usage
When requested to "Implement Jira task XXX", follow this workflow.

## Required Input
- Jira Ticket URL

## Workflow Steps

### 1. Initial Setup
1. Get Jira ticket information
2. Verify the ticket is in "To Do" status
3. Update the ticket status to "In Progress"
4. Retrieve full ticket details (using fields=*all)

### 2. Context Gathering
1. Check Jira ticket description for:
   - Confluence documentation links
     - If found, retrieve and analyze the documentation
   - Epic links
     - If found:
       - Retrieve Epic details
       - Check Epic description for Confluence links
       - If Confluence links found, retrieve and analyze the documentation
2. Analyze required libraries and frameworks:
   - Review task requirements to identify libraries and frameworks needed
   - Use Context 7 to fetch up-to-date documentation for each library
   - Pay special attention to:
     - API reference and usage examples
     - Best practices and recommended patterns
     - Version-specific features and limitations
     - Recent changes and deprecation notices

### 3. Development Setup
1. Create a feature branch from main
   - Branch naming format: feat/JIRA-XXX/short-description
   - Example: feat/PROJ-123/add-user-authentication
2. Switch to the newly created branch

### 4. Implementation
1. Implement the required changes
2. Follow project coding standards and conventions
3. Ensure all requirements are met
4. Add/update tests if necessary

### 5. Version Control
1. Stage all changes
2. Commit changes with descriptive messages
   - Follow commit message conventions
   - Reference Jira ticket number
3. Push changes to the remote repository

### 6. Task Completion
1. Verify all changes are pushed
2. Update Jira ticket status to "To Code Review"

## Notes
- All status transitions should be properly tracked
- Commit messages should be clear and follow conventions
- Code should adhere to project standards
- Documentation should be updated if necessary